v1:Netty学习思路：
     核心技术---》源码剖析---》技术实践
v2:JBoss提供的java开源框架，一个异步的基于事件驱动的网络应用框架，用于开发共性能高可靠性的网络IO程序。处理持续大量数据的应用
    Netty{NIO{原生JDK{TCP/IP}}}Netty 包装的NIO,以此类推
v3:
    学习资料 ：Netty In Action（作者就是netty创始，实战更好），Netty权威指南(思想和观念更好，但是基于的是netty5，而该版本已经不再维护)；
    应用场景：涉及网络通信的模块。尤其现在是分布式系统，节点之间涉及远程服务调用，RPC会被使用，而Netty就是这些RPC框架的组件
v4:
    I/O:采用何种通道进行数据的发送和接受，很大程度决定了程序通信的性能。
    I/O:BIO:jdk自带的，可以满足低并发。同步阻塞,服务器实现模式为一个连接一个线程，即客户端有连接请求时，服务端就需要启动一个线程去处理，如果这个连接不做任何事情会造成不必要的线程开销
        NIO: 高并发，在考虑兼容性后出现了netty。同步非阻塞，服务器实现模式为一个线程处理多个请求(连接)，即客户端发送的连接请求都会注册到多路复用器上，多路复用器轮询到连接有I/O请求就处理
        AIO:异步非阻塞，AIO引入异步通道的概念，采用了Proactor模式，简化了程序的编写，有效地请求才启动线程，他的特点是先由操作系统完成后才通知服务端程序启动线程去处理，一般适用于连接数较多且连接时间较长的应用 
